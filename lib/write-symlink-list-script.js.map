{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/write-symlink-list-script.coffee"
  ],
  "names": [],
  "mappings": "AAAmB;EAAA;EAGnB;AAHmB,MAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,kBAAA;;;EAMnB,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,0BAApB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,OAHF,EAIE,GAJF,CAAA,GAI4B,GAAG,CAAC,GAJhC,EAhBmB;;;EAsBnB,EAAA,GAA4B,OAAA,CAAQ,SAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,WAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,CAAA,CAAE,GAAF,CAAA,GAA4B,OAAA,CAAQ,IAAR,CAA5B,EAzBmB;;;;;;EAiCnB,kBAAA,GAAqB,QAAA,CAAA,CAAA;AACrB,QAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,EAAA,MAAA;;;;;IAIE,CAAA,GAAI;AACJ;IAAA,KAAA,qCAAA;;MACE,KAAgB,CAAE,EAAE,CAAC,SAAH,CAAa,MAAb,CAAF,CAAuB,CAAC,cAAxB,CAAA,CAAhB;AAAA,iBAAA;;MACA,MAAA,GAAS,EAAE,CAAC,YAAH,CAAgB,MAAhB;MACT,MAAA,GAAS,IAAI,CAAC,QAAL,CAAc,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAA9B,EAAoC,MAApC;MACT,MAAA,GAAS,IAAI,CAAC,QAAL,CAAc,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAA9B,EAAoC,MAApC;MACT,IAAA,CAAK,OAAL,EAAc,CAAA,CAAA,CAAG,MAAH,CAAA,IAAA,CAAA,CAAgB,MAAhB,CAAA,CAAd;MACA,CAAC,CAAC,IAAF,CAAO,CAAE,MAAF,EAAU,MAAV,CAAP;IANF,CALF;;;IAcE,EAAE,CAAC,aAAH,CAAiB,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAnC,EAAyC,IAAI,CAAC,SAAL,CAAe,CAAf,EAAkB,IAAlB,EAAwB,IAAxB,CAAzC;AACA,WAAO;EAhBY,EAjCF;;;EAqDnB,MAAM,CAAC,OAAP,GAAiB,CAAE,kBAAF,EArDE;;;EAwDnB,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,CAAA,CAAA,GAAA;aAAG,kBAAA,CAAA;IAAH,CAAA,IAAlC;;AAxDmB",
  "sourcesContent": [
    "#!/usr/bin/env node\n\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'create-westcoast/prepare'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n#...........................................................................................................\nFS                        = require 'node:fs'\nPATH                      = require 'node:path'\nglob                      = require 'glob'\n{ cfg }                   = require '..'\n\n\n#===========================================================================================================\n# FS.symlinkSync\n\n\n#===========================================================================================================\nwrite_symlink_list = ->\n  # help 'Ω___1', __filename\n  # help 'Ω___2', cfg\n  # help 'Ω___3', cfg.source.path.public\n  # help 'Ω___4', glob.sync\n  R = []\n  for target in glob.sync cfg.symlink_glob\n    continue unless ( FS.lstatSync target ).isSymbolicLink()\n    source = FS.realpathSync target\n    source = PATH.relative cfg.source.path.base, source\n    target = PATH.relative cfg.source.path.base, target\n    info 'Ω___5', \"#{source} -> #{target}\"\n    R.push { source, target, }\n  # help 'Ω___6', cfg.data.path\n  # help 'Ω___7', cfg.data.linklist.path\n  FS.writeFileSync cfg.data.linklist.path, JSON.stringify R, null, '  '\n  return null\n\n\n#===========================================================================================================\nmodule.exports = { write_symlink_list, }\n\n#===========================================================================================================\nif module is require.main then do => write_symlink_list()\n"
  ]
}