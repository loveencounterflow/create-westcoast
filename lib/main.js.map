{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'create-westcoast'\n{ rpr\n  inspect\n  echo\n  reverse }               = GUY.trm\n#...........................................................................................................\nFS                        = require 'node:fs'\nPATH                      = require 'node:path'\n{ execa\n  $\n  ExecaError }            = require 'execa'\nCLK                       = require '@clack/prompts'\n{ get_types }             = require './types'\n#...........................................................................................................\nlog = ( P... ) -> echo ( GUY.trm.grey '│ ' ), P...\n\n\n#===========================================================================================================\nclass Stepper\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    GUY.props.hide @, '_types', get_types()\n    GUY.props.hide @, '_transforms', []\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  # [Symbol.iterator]: -> yield from @_transforms\n\n  #---------------------------------------------------------------------------------------------------------\n  _run: ->\n    chain = ( GUY.props.get_prototype_chain @ ).reverse()\n    for object in chain\n      for key from GUY.props.walk_keys object, { hidden: true, builtins: false, depth: 0, }\n        continue if key is 'constructor'\n        continue if key is 'length'\n        continue if key.startsWith '_'\n        for method from @_walk_values object[ key ]\n          continue unless ( @_types.isa.function method ) or ( @_types.isa.asyncfunction method )\n          # whisper 'Ω___1', key\n          await method.call @\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _walk_values: ( value ) ->\n    return yield new value() if @_types.isa.class value\n    #.......................................................................................................\n    if @_types.isa.function value\n      return yield value unless ( value.name.startsWith '$' ) or ( value.name.startsWith 'bound $' )\n      return yield value.call @\n    #.......................................................................................................\n    if @_types.isa.list value\n      for e in value\n        yield d for d from @_walk_values e\n      return null\n    #.......................................................................................................\n    return yield value\n\n\n#===========================================================================================================\nclass Create extends Stepper\n\n  #---------------------------------------------------------------------------------------------------------\n  intro: ->\n    CLK.intro \"create-westcoast\"\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  create_app_folder: ->\n    cfg =\n      message:      \"In which folder should the WestCoast app be created?\"\n      placeholder:  \"folder name\"\n      initialValue: \"my-westcoast-app\"\n      validate:     ( value ) ->\n        # debug 'Ω___5', rpr value\n        return \"Value is required!\" if value.length is 0\n        return null\n    app_base_path = await CLK.text cfg\n    app_base_path = PATH.resolve process.cwd(), app_base_path\n    log GUY.trm.blue \"app will be created in #{rpr app_base_path}\"\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  outro: ->\n    CLK.outro \"create-westcoast\"\n    return null\n\n\nawait ( new Create() )._run()\n\ncreate = ->\n  debug 'Ω___3', $\n  debug 'Ω___4', await $\"ls\"\n  # debug 'Ω___5', rpr d for d from await $\"ls\"\n  info 'Ω___6', rpr d for await d from execa\"ls\"\n  try\n    debug 'Ω___7', rpr d for await d from execa\"ls nosuch\"\n  catch error\n    throw error unless error instanceof ExecaError\n    warn 'Ω___8', error.cwd, ( rpr error.command ), ( em error.code ? '' )\n    urge 'Ω___9', em error.originalMessage\n    help 'Ω__10', em error.shortMessage\n    warn 'Ω__11', em error.message\n  return null\n\nmodule.exports = { create, }\n\n# demo_zx = ->\n#   count = 0\n#   # for await line from execa\"cat /usr/share/dict/ngerman\"\n#   zx_cd '/home/flow/jzr/bing-image-creator-downloader'\n#   for await line from execa\"python3.11 ./main.py\"\n#     count++; break if count > 10000\n#     help 'Ω__12', rpr line\n#   return null\n\n# await demo_execa()\n\nwarn \"Ω__13 stop\"\nreturn null\n\n#===========================================================================================================\n{ version } = require '../package.json'\nsource_base = PATH.resolve __dirname, '../'\ntarget_base = process.cwd()\n\n#===========================================================================================================\ncfg = do =>\n  R =\n    data:\n      path:   PATH.resolve source_base, 'data'\n    source:\n      path:\n        base:   source_base\n        public: PATH.resolve source_base, 'public'\n    target:\n      path:\n        base:   target_base\n        public: PATH.resolve target_base, 'public'\n    cp:\n      errorOnExist:       true\n      dereference:        true\n      force:              false\n      preserveTimestamps: true\n      recursive:          true\n  R.symlink_glob  = PATH.join R.source.path.public, '**'\n  R.data.linklist = { path: ( PATH.resolve R.data.path, 'linklist.json' ), }\n  return R\n\n#===========================================================================================================\ncopy = ( source, target ) ->\n  info 'Ω__14', \"#{source} -> #{target}\"\n  try\n    FS.cpSync source, target, cfg.cp\n  catch error\n    throw error unless error.code is 'ERR_FS_CP_EEXIST'\n    warn 'Ω__15', em error.message\n    process.exit 111\n  return null\n\n#===========================================================================================================\ncreate = ->\n  urge 'Ω__16', \"helo from create-westcoast v#{version}\"\n  urge 'Ω__17', \"cfg.source.path.base:    #{cfg.source.path.base}\"\n  urge 'Ω__18', \"cfg.source.path.public:  #{cfg.source.path.public}\"\n  urge 'Ω__19', \"cfg.target.path.base:    #{cfg.target.path.base}\"\n  #.........................................................................................................\n  copy cfg.source.path.public, cfg.target.path.public\n  #.........................................................................................................\n  for { source, target, } in require cfg.data.linklist.path\n    source = PATH.resolve cfg.source.path.base, source\n    target = PATH.resolve cfg.target.path.base, target\n    copy source, target\n  #.........................................................................................................\n  return null\n\n\n#===========================================================================================================\nmodule.exports = { cfg, create, }\n\n#===========================================================================================================\nif module is require.main then do => create()\n\n\n\n"
  ]
}