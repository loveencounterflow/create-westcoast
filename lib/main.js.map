{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n#===========================================================================================================\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'create-westcoast'\n{ rpr\n  inspect\n  echo\n  reverse\n  log     }               = GUY.trm\n#...........................................................................................................\nem                        = ( P... ) -> GUY.trm.reverse GUY.trm.bold P...\n#...........................................................................................................\nFS                        = require 'node:fs'\nPATH                      = require 'node:path'\n\n\n#===========================================================================================================\n{ version } = require '../package.json'\nsource_base = PATH.resolve __dirname, '../'\ntarget_base = process.cwd()\n\n#===========================================================================================================\ncfg = do =>\n  R =\n    data:\n      path:   PATH.resolve source_base, 'data'\n    source:\n      path:\n        base:   source_base\n        public: PATH.resolve source_base, 'public'\n    target:\n      path:\n        base:   target_base\n        public: PATH.resolve target_base, 'public'\n    cp:\n      errorOnExist:       true\n      dereference:        true\n      force:              false\n      preserveTimestamps: true\n      recursive:          true\n  R.symlink_glob  = PATH.join R.source.path.public, '**'\n  R.data.linklist = { path: ( PATH.resolve R.data.path, 'linklist.json' ), }\n  return R\n\n#===========================================================================================================\ncopy = ( source, target ) ->\n  info 'Ω___1', \"#{source} -> #{target}\"\n  try\n    FS.cpSync source, target, cfg.cp\n  catch error\n    throw error unless error.code is 'ERR_FS_CP_EEXIST'\n    warn 'Ω___2', em error.message\n    # process.exit 111\n  return null\n\n#===========================================================================================================\ncreate = ->\n  urge 'Ω___3', \"helo from create-westcoast v#{version}\"\n  urge 'Ω___4', \"cfg.source.path.base:    #{cfg.source.path.base}\"\n  urge 'Ω___5', \"cfg.source.path.public:  #{cfg.source.path.public}\"\n  urge 'Ω___6', \"cfg.target.path.base:    #{cfg.target.path.base}\"\n  #.........................................................................................................\n  copy cfg.source.path.public, cfg.target.path.public\n  #.........................................................................................................\n  for { source, target, } in require cfg.data.linklist.path\n    source = PATH.resolve cfg.source.path.base, source\n    target = PATH.resolve cfg.target.path.base, target\n    copy source, target\n  #.........................................................................................................\n  return null\n\n\n#===========================================================================================================\nmodule.exports = { cfg, create, }\n\n#===========================================================================================================\nif module is require.main then do => create()\n\n\n\n"
  ]
}